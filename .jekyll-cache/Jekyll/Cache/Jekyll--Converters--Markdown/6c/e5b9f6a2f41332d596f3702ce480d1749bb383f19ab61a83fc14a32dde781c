I"&$<h2 id="파라미터">파라미터</h2>
<p><code class="language-plaintext highlighter-rouge">priority_queue&lt;T, Container, Compare&gt;</code></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">T</code> : 우선순위 큐에 들어가는 원소들의 타입 명시</li>
  <li><code class="language-plaintext highlighter-rouge">Container</code> : <code class="language-plaintext highlighter-rouge">T</code>에 선언 된 타입을 담는 형식을 명시, 이 때 순회가 가능 해야 하고, O(1) 시간복잡도로 원소에 접근 가능 해야 한다. ex) <code class="language-plaintext highlighter-rouge">vector</code>, <code class="language-plaintext highlighter-rouge">deque</code></li>
  <li><code class="language-plaintext highlighter-rouge">Compare</code> : 비교 함수</li>
  <li>가장 큰 원소가 top인 max heap이 기본값이다.</li>
</ul>

<p><br /></p>

<h2 id="기본-사용법">기본 사용법</h2>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// max heap</span>
<span class="n">priority_queue</span> <span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">less</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">pq</span><span class="p">;</span>
<span class="n">priority_queue</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>
<span class="c1">// 둘 다 똑같이 max heap</span>
</code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//min heap</span>
<span class="n">priority_queue</span> <span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">pq</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">priority_queue</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>

<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="mi">6</span><span class="p">);</span> <span class="c1">// 삽입</span>
<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>

<span class="n">pq</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="c1">// 6</span>
</code></pre></div></div>

<h2 id="응용">응용</h2>

<h3 id="compare-함수-사용">compare 함수 사용</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// second 비교하기</span>

<span class="c1">// 비교 함수</span>
<span class="k">struct</span> <span class="nc">cmp</span> <span class="p">{</span>
  <span class="kt">bool</span> <span class="k">operator</span><span class="p">()(</span><span class="k">const</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">second</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="n">priority_queue</span> <span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span><span class="p">,</span> <span class="n">cmp</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>

<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">});</span>
<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">});</span>

<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">pq</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">first</span> <span class="o">&lt;&lt;</span> <span class="err">'</span><span class="p">,</span> <span class="err">'</span> <span class="o">&lt;&lt;</span> <span class="n">pq</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">second</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// 0, 5</span>

</code></pre></div></div>

<h3 id="struct-사용">struct 사용</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="nc">Custom</span> <span class="p">{</span>
  <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">val</span><span class="p">;</span>
  <span class="n">Custom</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">)</span><span class="o">:</span> <span class="n">x</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="n">y</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="n">val</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="p">{}</span>
<span class="p">}</span>

<span class="k">struct</span> <span class="nc">cmp</span> <span class="p">{</span>
    <span class="kt">bool</span> <span class="k">operator</span><span class="p">()(</span><span class="k">const</span> <span class="n">Custom</span> <span class="o">&amp;</span><span class="n">u</span><span class="p">,</span> <span class="k">const</span> <span class="n">Custom</span> <span class="o">&amp;</span><span class="n">v</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">u</span><span class="p">.</span><span class="n">val</span> <span class="o">&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">val</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="n">priority_queue</span> <span class="o">&lt;</span><span class="n">Custom</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">Custom</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">less</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">pq</span><span class="p">;</span>

<span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">Custom</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">Custom</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">cmp</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>

<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Custom</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
<span class="n">pq</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Custom</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span>

<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">pq</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">val</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// 1</span>

</code></pre></div></div>
:ET