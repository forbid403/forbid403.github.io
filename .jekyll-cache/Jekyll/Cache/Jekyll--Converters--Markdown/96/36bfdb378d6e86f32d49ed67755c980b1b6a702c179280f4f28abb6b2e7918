I"rD<h2 id="백준-1726-로봇">[백준 1726] 로봇</h2>
<p><a href="https://www.acmicpc.net/problem/1726">문제 링크</a></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">"header.h"</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">room</span><span class="p">[</span><span class="mi">101</span><span class="p">][</span><span class="mi">101</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">visit</span><span class="p">[</span><span class="mi">101</span><span class="p">][</span><span class="mi">101</span><span class="p">][</span><span class="mi">5</span><span class="p">];</span>
<span class="c1">//1동 2서 3남 4북</span>
<span class="kt">int</span> <span class="n">dx</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">};</span>
<span class="kt">int</span> <span class="n">dy</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>

<span class="k">typedef</span> <span class="k">struct</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">d</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">cnt</span><span class="p">;</span>
<span class="p">}</span><span class="n">st</span><span class="p">;</span>
<span class="n">st</span> <span class="n">robot</span><span class="p">;</span>
<span class="n">st</span> <span class="n">destination</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">input</span><span class="p">(){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">room</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">d</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">y</span> <span class="o">&gt;&gt;</span> <span class="n">d</span><span class="p">;</span>
    <span class="n">robot</span> <span class="o">=</span> <span class="p">{</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>

    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">y</span> <span class="o">&gt;&gt;</span> <span class="n">d</span><span class="p">;</span>
    <span class="n">destination</span> <span class="o">=</span> <span class="p">{</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>

<span class="p">}</span>
<span class="kt">int</span> <span class="nf">check</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
    <span class="k">if</span><span class="p">((</span><span class="n">x</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">y</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">y</span> <span class="o">==</span> <span class="mi">2</span><span class="p">))</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span><span class="p">((</span><span class="n">x</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">||</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">4</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">y</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">||</span> <span class="n">y</span> <span class="o">==</span> <span class="mi">4</span><span class="p">))</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">solve</span><span class="p">(){</span>

    <span class="n">vector</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">candidate</span><span class="p">;</span>
    <span class="n">queue</span> <span class="o">&lt;</span><span class="n">st</span><span class="o">&gt;</span> <span class="n">q</span><span class="p">;</span>
    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">robot</span><span class="p">);</span>
    <span class="n">visit</span><span class="p">[</span><span class="n">robot</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">robot</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">robot</span><span class="p">.</span><span class="n">d</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="n">st</span> <span class="n">top</span> <span class="o">=</span> <span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>

        <span class="k">if</span><span class="p">(</span><span class="n">top</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">destination</span><span class="p">.</span><span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="n">destination</span><span class="p">.</span><span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">top</span><span class="p">.</span><span class="n">d</span> <span class="o">==</span> <span class="n">destination</span><span class="p">.</span><span class="n">d</span><span class="p">){</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span>  <span class="n">top</span><span class="p">.</span><span class="n">cnt</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">//top.d 방향으로 최대 3번 움직이기</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="mi">3</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="kt">int</span> <span class="n">next_x</span> <span class="o">=</span> <span class="n">top</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="p">(</span><span class="n">dx</span><span class="p">[</span><span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">]</span> <span class="o">*</span> <span class="n">j</span><span class="p">);</span>
            <span class="kt">int</span> <span class="n">next_y</span> <span class="o">=</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="p">(</span><span class="n">dy</span><span class="p">[</span><span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">]</span> <span class="o">*</span> <span class="n">j</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">visit</span><span class="p">[</span><span class="n">next_x</span><span class="p">][</span><span class="n">next_y</span><span class="p">][</span><span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">room</span><span class="p">[</span><span class="n">next_x</span><span class="p">][</span><span class="n">next_y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">||</span> <span class="n">next_x</span> <span class="o">&gt;</span> <span class="n">N</span> <span class="o">||</span> <span class="n">next_y</span> <span class="o">&gt;</span> <span class="n">M</span> <span class="o">||</span> <span class="n">next_x</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">next_y</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="n">visit</span><span class="p">[</span><span class="n">next_x</span><span class="p">][</span><span class="n">next_y</span><span class="p">][</span><span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">next_x</span><span class="p">,</span> <span class="n">next_y</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">cnt</span> <span class="o">+</span> <span class="mi">1</span><span class="p">});</span> <span class="c1">//움직일 수 있다면 큐에 넣기</span>
        <span class="p">}</span>


        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
            <span class="c1">//다른 방향으로 움직이기            </span>
            <span class="k">if</span><span class="p">(</span><span class="n">visit</span><span class="p">[</span><span class="n">top</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">top</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">||</span> <span class="n">room</span><span class="p">[</span><span class="n">top</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">top</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">top</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">N</span> <span class="o">||</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">M</span> <span class="o">||</span> <span class="n">top</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">check</span><span class="p">(</span><span class="n">top</span><span class="p">.</span><span class="n">d</span><span class="p">,</span> <span class="n">i</span><span class="p">)){</span>
                <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">top</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">cnt</span> <span class="o">+</span> <span class="mi">2</span><span class="p">});</span>
            <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">top</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">top</span><span class="p">.</span><span class="n">cnt</span> <span class="o">+</span> <span class="mi">1</span><span class="p">});</span>
            <span class="p">}</span>

            <span class="c1">//해당 방향을 방문 처리 해 준다.</span>
            <span class="n">visit</span><span class="p">[</span><span class="n">top</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">top</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

        <span class="p">}</span>
        
    <span class="p">}</span>

<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>

    <span class="n">input</span><span class="p">();</span>
    <span class="n">solve</span><span class="p">();</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
<ul>
  <li>visit을 3차원 배열로 만들어서 x좌표, y좌표, 방향을 저장한다.</li>
  <li>bfs를 돌면서 top이 destination이라면 출력 후 종료한다.</li>
  <li>아니라면</li>
  <li>
    <ol>
      <li>최대 3칸 앞으로 갈 수 있는지 확인한다 (go)</li>
    </ol>
  </li>
  <li>
    <ol>
      <li>동서남북을 확인한다 (dir)</li>
    </ol>
  </li>
  <li>움직이는 go에서 +1씩 해주고,</li>
  <li>동서남북을 확인하고 방향이 전환됨에 따라 +1, +2씩 해주면 된다.</li>
</ul>
:ET