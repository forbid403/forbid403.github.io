I"O<h1 id="이중우선순위큐">이중우선순위큐</h1>

<p>Algorithm: 힙
Created: Apr 16, 2020 1:06 AM
DoubleChk: No
Type: 프로그래머스
level: 3
link: https://programmers.co.kr/learn/courses/30/lessons/42628</p>

<h3 id="문제-설명"><strong>문제 설명</strong></h3>

<p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p>

<p><a href="Untitled/Untitled%20Database.csv">Untitled</a></p>

<p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p>

<h3 id="제한사항">제한사항</h3>

<ul>
  <li>operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.</li>
  <li>operations의 원소는 큐가 수행할 연산을 나타냅니다.
    <ul>
      <li>원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.</li>
    </ul>
  </li>
  <li>빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.</li>
</ul>

<h3 id="입출력-예">입출력 예</h3>

<p><a href="Untitled/Untitled%20Database%201.csv">Untitled</a></p>

<h3 id="입출력-예-설명">입출력 예 설명</h3>

<p>16을 삽입 후 최댓값을 삭제합니다. 비어있으므로 [0,0]을 반환합니다.7,5,-5를 삽입 후 최솟값을 삭제합니다. 최대값 7, 최소값 5를 반환합니다.</p>

<hr />
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>    <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
    
    <span class="n">deque</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">dq</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">oper</span> <span class="o">:</span> <span class="n">operations</span><span class="p">){</span>
            <span class="kt">char</span> <span class="n">order</span> <span class="o">=</span> <span class="n">oper</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
            <span class="n">string</span> <span class="n">num</span> <span class="o">=</span> <span class="n">oper</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">oper</span><span class="p">.</span><span class="n">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    				<span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">num</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">order</span> <span class="o">==</span> <span class="sc">'I'</span><span class="p">){</span>
                <span class="n">dq</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">number</span><span class="p">);</span>
                <span class="n">sort</span><span class="p">(</span><span class="n">dq</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">dq</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
            <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">order</span> <span class="o">==</span> <span class="sc">'D'</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">dq</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
                <span class="n">dq</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
            <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">order</span> <span class="o">==</span> <span class="sc">'D'</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">dq</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
                <span class="n">dq</span><span class="p">.</span><span class="n">pop_front</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">dq</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">dq</span><span class="p">.</span><span class="n">back</span><span class="p">());</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">dq</span><span class="p">.</span><span class="n">front</span><span class="p">());</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>
    <p>문제 풀이</p>

    <p>deque를 만들어서 push 할 때마다 sorting을 해 준다.</p>

    <p>연산을 모두 수행 후에 dq가 비었다면 0, 0을 answer에 푸쉬 해 주고,</p>

    <p>비어있지 않다면 가장 큰 값과 작은값을 푸쉬 해 준다.</p>
  </li>
</ul>
:ET