I"	<h1 id="9095-1-2-3-더하기">[9095] 1, 2, 3 더하기</h1>

<p>Algorithm: 백트래킹
Created: Jan 27, 2020 6:35 PM
DoubleChk: No
Type: 백준
link: https://www.acmicpc.net/problem/9095</p>

<h2 id="문제">문제</h2>

<p>정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.</p>

<ul>
  <li>1+1+1+1</li>
  <li>1+1+2</li>
  <li>1+2+1</li>
  <li>2+1+1</li>
  <li>2+2</li>
  <li>1+3</li>
  <li>3+1</li>
</ul>

<p>정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.</p>

<h2 id="입력">입력</h2>

<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. n은 양수이며 11보다 작다.</p>

<h2 id="출력">출력</h2>

<p>각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.</p>

<h2 id="예제-입력-1">예제 입력 1</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
4
7
10
</code></pre></div></div>

<h2 id="예제-출력-1">예제 출력 1</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>7
44
274
</code></pre></div></div>

<hr />
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>    <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">cnt</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">num</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">};</span>
    <span class="kt">int</span> <span class="n">check</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span>
    <span class="c1">//1, 2, 3의 합으로 나타내기</span>
    
    <span class="kt">void</span> <span class="nf">recursion</span><span class="p">(</span><span class="kt">int</span> <span class="n">target</span><span class="p">,</span> <span class="kt">int</span> <span class="n">cur</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">target</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">target</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
    
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">cur</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="n">recursion</span><span class="p">(</span><span class="n">target</span> <span class="o">-</span> <span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">cur</span><span class="p">);</span>
        <span class="p">}</span>
    
    <span class="p">}</span>
    
    <span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">T</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>
    
            <span class="n">recursion</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
    
    
    
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>
    <p>문제 풀이</p>

    <p>재귀를 돌면서 1, 2, 3을 차례로 빼준다.</p>

    <p>기저 조건은 현재 값이 0일때 → 답을 하나 추가 해 준다.</p>

    <p>만약 0 이하라면, 답이 아니기 때문에 (너무 많이 뺐기 때문에) return을 해 준다.</p>
  </li>
  <li>
    <p>후기</p>

    <p>편두통이 심해졌다..</p>
  </li>
</ul>
:ET