I"•1<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;map&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">str1</span><span class="p">,</span> <span class="n">string</span> <span class="n">str2</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">string</span> <span class="n">clean_str1</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">clean_str2</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="c1">//Îëò Îã§ ÏÜåÎ¨∏ÏûêÎ°ú Î∞îÍæ∏Í≥†</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">char</span> <span class="n">c</span> <span class="o">:</span> <span class="n">str1</span><span class="p">)</span>
        <span class="n">clean_str1</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">char</span> <span class="n">c</span> <span class="o">:</span> <span class="n">str2</span><span class="p">)</span>
        <span class="n">clean_str2</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>

    <span class="c1">//ÎπÑÍµê</span>
    <span class="n">map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">m1</span><span class="p">;</span>
    <span class="n">map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">m2</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">v1</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">v2</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">clean_str1</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">string</span> <span class="n">tmp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">isalpha</span><span class="p">(</span><span class="n">clean_str1</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="n">isalpha</span><span class="p">(</span><span class="n">clean_str1</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])){</span>
            <span class="n">tmp</span> <span class="o">+=</span> <span class="n">clean_str1</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="n">tmp</span> <span class="o">+=</span> <span class="n">clean_str1</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
            <span class="n">v1</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">tmp</span><span class="p">);</span>
            <span class="n">m1</span><span class="p">[</span><span class="n">tmp</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">clean_str2</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">string</span> <span class="n">tmp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">isalpha</span><span class="p">(</span><span class="n">clean_str2</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="n">isalpha</span><span class="p">(</span><span class="n">clean_str2</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])){</span>
            <span class="n">tmp</span> <span class="o">+=</span> <span class="n">clean_str2</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="n">tmp</span> <span class="o">+=</span> <span class="n">clean_str2</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
            <span class="n">v2</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">tmp</span><span class="p">);</span>
            <span class="n">m2</span><span class="p">[</span><span class="n">tmp</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>


    <span class="kt">double</span> <span class="n">cnt_inter</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//ÍµêÏßëÌï©</span>
    <span class="kt">double</span> <span class="n">cnt_union</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//Ìï©ÏßëÌï©</span>
    <span class="kt">int</span> <span class="n">total_size</span> <span class="o">=</span> <span class="n">v1</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="n">v2</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="k">if</span><span class="p">(</span><span class="n">total_size</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
        <span class="k">return</span> <span class="mi">65536</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c1">//Ìï©ÏßëÌï©, ÍµêÏßëÌï© Ï∞æÍ∏∞</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">v1</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">v2</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v2</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">string</span> <span class="n">cmp</span> <span class="o">=</span> <span class="n">v2</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">]){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">]){</span>
                    <span class="n">cnt_inter</span> <span class="o">+=</span> <span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">];</span>
                    <span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                    <span class="n">cnt_inter</span> <span class="o">+=</span> <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">];</span>
                    <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v1</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">string</span> <span class="n">cmp</span> <span class="o">=</span> <span class="n">v1</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">]){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">]){</span>
                    <span class="n">cnt_inter</span> <span class="o">+=</span> <span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">];</span>
                    <span class="n">m1</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                    <span class="n">cnt_inter</span> <span class="o">+=</span> <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">];</span>
                    <span class="n">m2</span><span class="p">[</span><span class="n">cmp</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">cnt_union</span> <span class="o">=</span> <span class="n">total_size</span> <span class="o">-</span> <span class="n">cnt_inter</span><span class="p">;</span>

    <span class="kt">double</span> <span class="n">jacard</span> <span class="o">=</span> <span class="n">cnt_inter</span> <span class="o">/</span> <span class="n">cnt_union</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">jacard</span> <span class="o">*</span> <span class="mi">65536</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET