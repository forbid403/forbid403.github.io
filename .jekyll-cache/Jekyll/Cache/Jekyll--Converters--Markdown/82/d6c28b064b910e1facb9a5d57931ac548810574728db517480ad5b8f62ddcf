I"B<h2 id="프로그래머스-단속카메라">[프로그래머스] 단속카메라</h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42884">문제 링크</a></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">routes</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">routes</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">routes</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">routes</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>

    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">routes</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">routes</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">start</span> <span class="o">&lt;=</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">){</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]);</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">end</span><span class="p">,</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]);</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">routes</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

<ul>
  <li>가장 많이 겹치는 범위를 update를 해주면 된다.</li>
  <li>범위는 start, end로 결정한다. answer의 초깃값을 1로 설정해준다.</li>
  <li>들어온 지점의 순서대로 sorting을 해 준다.</li>
  <li>차의 갯수만큼 반복문을 돌면서, 들어온 차가 범위 안에 있으면 범위를 update 해 주고,</li>
  <li>아니라면 범위를 해당 차로 초기화 시켜준 후 새로운 차를 기준으로 반복문을 진행한다. (그리고 감시카메라를 +1 한다.)
<img src="https://user-images.githubusercontent.com/41617388/82119004-debca080-97b5-11ea-988f-7a37e8b28bba.png" alt="Page 1" />
<img src="https://user-images.githubusercontent.com/41617388/82119002-db291980-97b5-11ea-9296-d3b8205049ab.png" alt="Page 2" /></li>
</ul>
:ET