I"!<h1 id="409-longest-palindrome">409. Longest Palindrome</h1>

<p>Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.</p>

<p>This is case sensitive, for example “Aa” is not considered a palindrome here.</p>

<p>Note:
Assume the length of given string will not exceed 1,010.</p>

<p>Example:</p>

<p><strong>Input:</strong>
    “abccccdd”</p>

<p><strong>Output:</strong>
    7</p>

<p>Explanation:
One longest palindrome that can be built is “dccaccd”, whose length is 7.</p>

<hr />
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">int</span> <span class="n">longestPalindrome</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">unordered_map</span> <span class="o">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">m</span><span class="p">;</span>
        
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">c</span> <span class="o">:</span> <span class="n">s</span><span class="p">){</span>
            <span class="n">m</span><span class="p">[</span><span class="n">c</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">flag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        
        <span class="k">for</span> <span class="p">(</span><span class="n">unordered_map</span><span class="o">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;::</span>
             <span class="n">const_iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">m</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">it</span> <span class="o">!=</span> <span class="n">m</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">it</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                <span class="n">ans</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">flag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">flag</span><span class="p">){</span>
                    <span class="n">ans</span> <span class="o">+=</span> <span class="p">(</span><span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="p">{</span>
                    <span class="n">ans</span> <span class="o">+=</span> <span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">;</span>
                    <span class="n">flag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
                <span class="n">ans</span> <span class="o">+=</span> <span class="p">(</span><span class="n">it</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
<ul>
  <li>
    <p>문제풀이
  해쉬 맵에 글자들의 갯수를 저장한다.</p>

    <p>palindrome이 되는 조건은 가운데 기준으로 대칭을 이루면 된다.
 1개인 경우는 대칭의 기준이 되는 애 1개면 충분 하기 때문에 flag로 구분 해 준다.
 홀수인 경우는 n-1개로 짝수로 만들어서 대칭을 만든다.
 이 때에, 기준이 되는 1개가 없을 경우 ex) “ccc” 를 예외처리 해준다.
 짝수인 경우는 그냥 대칭을 만든다.</p>
  </li>
</ul>

:ET