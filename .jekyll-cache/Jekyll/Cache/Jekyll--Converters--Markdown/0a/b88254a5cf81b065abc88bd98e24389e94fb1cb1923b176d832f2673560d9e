I",<h1 id="기능개발">기능개발</h1>

<p>Created: Apr 07, 2020 10:49 PM
DoubleChk: No
Type: 프로그래머스
link: https://programmers.co.kr/learn/courses/30/lessons/42586</p>

<h3 id="문제-설명"><strong>문제 설명</strong></h3>

<p>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p>

<p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p>

<p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</p>

<h3 id="제한-사항">제한 사항</h3>

<ul>
  <li>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.</li>
  <li>작업 진도는 100 미만의 자연수입니다.</li>
  <li>작업 속도는 100 이하의 자연수입니다.</li>
  <li>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</li>
</ul>

<hr />
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>    <span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>    
    <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
    
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">progresses</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">speeds</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">progresses</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    
        <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">left</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
    
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">left</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
                <span class="n">progresses</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">speeds</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="p">}</span>
    
            <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">progresses</span><span class="p">[</span><span class="n">left</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">){</span>
                <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
                <span class="n">left</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
    
            <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">cnt</span><span class="p">);</span>
    
        <span class="p">}</span>
    
        <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>
    <p>문제 풀이</p>

    <p>예전에 풀었던 건데, 스킬 체크로 다시 풀었다.</p>

    <p>left라는 인덱스를 하나 두어서, 반복문을 진행한다.</p>

    <p>만약 left가 n보다 크면, 함수를 종료 해 준다.</p>

    <p>left부터 n까지 돌면서 진행 상황을 업데이트 해 준다.</p>

    <p>만약 progress[left]가 100이 됐다면, 답을 세어 주고, left를 옮겨 준다.</p>

    <p>답을 벡터에 넣어 준다.</p>
  </li>
</ul>
:ET