I"!<p>React 개발 환경 설정 시 CRA로만 진행했었다. 멘토님께서 CRA는 불필요한 것들이 많으니 직접 customizing을 해 가는게 좋다고 해주셨다. React 공식 documentation에 나와있는 해당 <a href="https://blog.usejournal.com/creating-a-react-app-from-scratch-f3c693b84658">article</a>을 보며 React 개발 환경을 기초부터 진행 해 봤다. 이 과정에서 webpack.config.js에 있는 환경변수들의 의미를 살필 수 있었다.</p>

<h3 id="webpackconfigjs">webpack.config.js</h3>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">path</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">webpack</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">webpack</span><span class="dl">"</span><span class="p">);</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
    <span class="c1">// Where to start bundling</span>
    <span class="c1">// 번들링을 시작하는 entry</span>
    <span class="na">entry</span><span class="p">:</span> <span class="dl">"</span><span class="s2">./src/index.js</span><span class="dl">"</span><span class="p">,</span> 
    <span class="na">mode</span><span class="p">:</span> <span class="dl">"</span><span class="s2">development</span><span class="dl">"</span><span class="p">,</span>
    <span class="c1">// Define how exported js modules are transformed (defined in rules list)</span>
    <span class="c1">// exported된 js 모듈들을 어떻게 변환시킬지 정의한다. (rules 리스트에 작성)</span>
    <span class="na">module</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">rules</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="c1">// conditions to match file</span>
                <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.(</span><span class="sr">js|jsx</span><span class="se">)</span><span class="sr">$/</span><span class="p">,</span>
                <span class="c1">// match anything outside of node_modules and bower_components</span>
                <span class="c1">// node_modules와 bower_components 이외의 파일들을 matching 한다</span>
                <span class="na">exclude</span><span class="p">:</span> <span class="sr">/</span><span class="se">(</span><span class="sr">node_modules|bower_components</span><span class="se">)</span><span class="sr">/</span><span class="p">,</span>
                <span class="na">loader</span><span class="p">:</span> <span class="dl">"</span><span class="s2">babel-loader</span><span class="dl">"</span><span class="p">,</span>
                <span class="na">options</span><span class="p">:</span> <span class="p">{</span> <span class="na">presets</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">@babel/env</span><span class="dl">"</span><span class="p">]</span> <span class="p">}</span>
            <span class="p">},</span>
            <span class="p">{</span>
                <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">css$/</span><span class="p">,</span>
                <span class="na">use</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">style-loader</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">css-loader</span><span class="dl">"</span><span class="p">]</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">},</span>
    
    <span class="c1">// specify which extensions Webpack will resolve</span>
    <span class="c1">// 웹팩이 어떤 extension들을 resolve 할 것인지 정의</span>
    <span class="na">resolve</span><span class="p">:</span> <span class="p">{</span> <span class="na">extensions</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">*</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">.js</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">.jsx</span><span class="dl">"</span><span class="p">]</span> <span class="p">},</span>


    <span class="c1">// ** notice **</span>
    <span class="c1">// output.publicPath and devServer.publicPath are different!</span>
    <span class="c1">// output.publicPath와 devServer.publicPath는 다르다</span>

    <span class="c1">// Where to put bundled code</span>
    <span class="c1">// 번들링된 코드를 어디에 둘 것인지 정의</span>
    <span class="na">output</span><span class="p">:</span> <span class="p">{</span>
        <span class="c1">// what directory bundle should go in</span>
        <span class="c1">// webpack-dev-server serve files from here</span>
        <span class="c1">// bundle된 것이 어디에 저장 될 것인지 정의</span>
        <span class="c1">// webpack-dev-server가 여기에서 파일들을 serve한다.</span>
        <span class="na">path</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">"</span><span class="s2">dist/</span><span class="dl">"</span><span class="p">),</span>
        <span class="c1">// specifies the public URL of the directory for dev-server</span>
        <span class="c1">// if thie set is wrong, will retrun 404</span>
        <span class="c1">// dev-server이 접근할 public URL을 정의한다.</span>
        <span class="c1">// 잘못 정의할 시 404 코드를 리턴한다.</span>
        <span class="na">publicPath</span><span class="p">:</span> <span class="dl">"</span><span class="s2">/dist/</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">filename</span><span class="p">:</span> <span class="dl">"</span><span class="s2">bundle.js</span><span class="dl">"</span>
    <span class="p">},</span>
    
    <span class="c1">// For dev server</span>
    <span class="na">devServer</span><span class="p">:</span> <span class="p">{</span>
        <span class="c1">// location where the static files exist</span>
        <span class="c1">// static 파일들이 어디에 위치해야 하는지</span>
        <span class="na">contentBase</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">"</span><span class="s2">public/</span><span class="dl">"</span><span class="p">),</span>
        <span class="na">port</span><span class="p">:</span> <span class="mi">3000</span><span class="p">,</span>
        <span class="c1">// tell server where our bundled code is located</span>
        <span class="c1">// Dev server에게 번들링된 코드라 어디에 존재하는지 알려줌</span>
        <span class="na">publicPath</span><span class="p">:</span> <span class="dl">"</span><span class="s2">http://localhost:3000/dist/</span><span class="dl">"</span><span class="p">,</span>
        <span class="c1">// Hot Module Replacement</span>
        <span class="c1">// module will updated at runtime without fully refreshing</span>
        <span class="c1">// HMR을 이용할 시 refresh하지 않고도 module이 업데이트 된다.</span>
        <span class="na">hotOnly</span><span class="p">:</span> <span class="kc">true</span>
    <span class="p">},</span>
    <span class="na">plugins</span><span class="p">:</span> <span class="p">[</span><span class="k">new</span> <span class="nx">webpack</span><span class="p">.</span><span class="nx">HotModuleReplacementPlugin</span><span class="p">()]</span>
<span class="p">};</span>

</code></pre></div></div>

<p>Article을 보면 좀 더 풀어서 설명되어 있으니 참고하길 바란다.</p>
:ET