I""<h1 id="til-react-vue-angular-비교">[TIL] React, Vue, Angular 비교</h1>

<h2 id="angular">Angular</h2>
<ul>
  <li>TS 기반 → 대규모 팀과 협업에 적합</li>
  <li>단, 양방향 바인딩 모두 지원</li>
  <li>컴포넌트 기반</li>
</ul>

<h2 id="react">React</h2>
<ul>
  <li>JSX 사용</li>
  <li>가상 DOM 사용</li>
  <li>단방향 데이터 바인딩</li>
  <li>컴포넌트 기반</li>
</ul>

<h2 id="vue">Vue</h2>
<ul>
  <li>Virtual DOM 사용</li>
  <li>Template 사용</li>
  <li>단, 양방향 바인딩 모두 지원</li>
  <li>컴포넌트 기반</li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<table>
  <thead>
    <tr>
      <th>-</th>
      <th style="text-align: center">React</th>
      <th style="text-align: center">Vue</th>
      <th style="text-align: center">Angular</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>언어</td>
      <td style="text-align: center">JSX</td>
      <td style="text-align: center">JS</td>
      <td style="text-align: center">TS</td>
    </tr>
    <tr>
      <td>바인딩</td>
      <td style="text-align: center">단방향</td>
      <td style="text-align: center">단&amp;양방향</td>
      <td style="text-align: center">단&amp;양방향</td>
    </tr>
    <tr>
      <td>가상 DOM</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td>템플릿</td>
      <td style="text-align: center">X</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td>공통점</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">컴포넌트 기반</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h2 id="component란">Component란?</h2>
<ul>
  <li>재사용이 가능한 최소 단위</li>
</ul>

<h2 id="단방향--양방향">단방향 &amp; 양방향</h2>
<image src="https://user-images.githubusercontent.com/41617388/92496044-97f62900-f232-11ea-966e-1432af599089.png" width="500"><br />
단방향은 템플릿과 모델을 동기화 시킬 때에 뷰에 적용이 된다.<br />
양방향은 뷰와 모델이 바뀔 때마다 서로 갱신이 된다. <br />

<image src="https://user-images.githubusercontent.com/41617388/92496186-cb38b800-f232-11ea-8f5d-a4a3d0739fb8.png" width="300"><br />
리액트는 단방향 바인딩이다.<br />
parent &#8594; child 방향으로 바인딩이 되고, 이 때 전달되는 props는 immutable 하다.<br />
컴포넌트는 state를 가지고 있는데, state는 mutable하다.<br />
값 변경 시에는 setState()를 호출함으로서 동기화를 해 주어야 한다.<br />
child에서 parent로 전달 하고 싶을 때에는 event로 전달 해 주어야 한다.<br />
</image></image>
:ET