I"_f<h1 id="react-특정-table-row-highlighting">React 특정 Table Row highlighting</h1>

<p>Created By: 성희 배
Last Edited: Jan 27, 2020 6:30 PM
Tags: dev</p>

<h3 id="전체-뷰">전체 뷰</h3>

<p><img src="https://user-images.githubusercontent.com/41617388/73274466-f2ed8980-4228-11ea-8865-f6edb05ce8db.png" alt="Untitled" /></p>

<ul>
  <li>Youtube 동영상 밑에 있는 Table의 Row를 클릭 시에 Highlighting 하는 기능을 설명한다.</li>
  <li>다른 Row 클릭 시 클릭된 Row만 highlighting 된다.</li>
</ul>

<hr />

<h3 id="table-선언">Table 선언</h3>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">import</span> <span class="nx">RawItem</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../components/RawItem</span><span class="dl">'</span>
    <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">TableRow</span><span class="o">&gt;</span>
    			<span class="o">&lt;</span><span class="nx">RawItem</span><span class="o">/&gt;</span>
    		<span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span></code></pre></div></div>
<h3 id="tablecell-component-선언">TableCell Component 선언</h3>

<p>RawItem.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="o">&lt;</span><span class="nx">TableCell</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">caption</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">h6</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/TableCell</span><span class="err">&gt;
</span></code></pre></div></div>
<ul>
  <li>Row와 Row 안에 들어갈 Cell의 컴포넌트들을 만들어준다.</li>
</ul>

<h3 id="테이블-데이터-선언">테이블 데이터 선언</h3>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">const</span> <span class="nx">tableData</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
    <span class="k">return</span> <span class="nx">tableData</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">TableRow</span><span class="o">&gt;</span>
    			<span class="o">&lt;</span><span class="nx">RawItem</span><span class="o">/&gt;</span>
    		<span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span>    <span class="p">)</span>
    <span class="p">})</span>
</code></pre></div></div>
<ul>
  <li>테이블 데이터를 대충 설정 해 주고, .map 반복문으로 Row를 생성해준다.</li>
  <li>프로젝트를 실행 해 보면 3개의 cell들이 보일 것이다.</li>
</ul>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">const</span> <span class="nx">tableData</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
    <span class="k">return</span> <span class="nx">tableData</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">TableRow</span><span class="o">&gt;</span>
    			<span class="o">&lt;</span><span class="nx">RawItem</span> <span class="nx">row</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span><span class="sr">/</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span>    <span class="p">)</span>
    <span class="p">})</span>
</code></pre></div></div>
<ul>
  <li>그리고 map을 돌면서, row = {index}로 각각의 cell들의 index를 자식에게 보내준다.</li>
</ul>

<h3 id="부모에게-클릭된-cell의-index-보내기">부모에게 클릭된 cell의 index 보내기</h3>

<p>RawItem.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="o">&lt;</span><span class="nx">TableCell</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">row</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">caption</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">h6</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/TableCell</span><span class="err">&gt;
</span></code></pre></div></div>
<ul>
  <li>이제 부모에게서 받은 값을 props로 접근할 수 있다.</li>
  <li>
    <p>태그로 한 번 찍어보겠다!

</p>
  </li>
</ul>
<p><img src="https://user-images.githubusercontent.com/41617388/73274441-e79a5e00-4228-11ea-94ad-f1cdc8c7abc4.png" alt="Untitled 1" /></p>

<ul>
  <li>인덱스를 잘 받아온 것을 알 수 있다.</li>
  <li>
    <p>이제 이 cell들을 클릭 시, 부모에게 클릭 한 cell의 인덱스를 보내 줄 것이다.</p>

    <p>sendSelectedRow = () =&gt; {
  	this.props.parentCallback(this.props.row)
  }</p>
  </li>
  <li>callback 형식으로 부모에게 클릭 한 값을 보내주는 메소드다.</li>
</ul>

<p>RawItem.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="o">&lt;</span><span class="nx">TableCell</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">sendSelectedRow</span><span class="p">}</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">row</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">caption</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">h6</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/TableCell</span><span class="err">&gt;
</span></code></pre></div></div>
<ul>
  <li>TableCell의 onClick에 붙여준다.</li>
</ul>

<h3 id="parent에서-값을-받고-변경시키기">Parent에서 값을 받고 변경시키기</h3>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
    	<span class="na">selected</span><span class="p">:</span> <span class="kc">null</span>
    <span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>Parent에서 state를 선언해준다</li>
  <li>선택된 cell의 인덱스를 저장해주는 state이다
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nx">callbackFunc</span> <span class="o">=</span> <span class="p">(</span><span class="nx">childData</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  	<span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span> 
  		<span class="na">selected</span><span class="p">:</span> <span class="nx">childData</span><span class="p">,</span>
  	<span class="p">})</span>        
  <span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>callback 함수를 선언 해 준다.</li>
  <li>setState로 RawItem.js에서 클릭 시 전달해준 index를 저장한다.
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">const</span> <span class="nx">tableData</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
  <span class="k">return</span> <span class="nx">tableData</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
  	<span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
  		<span class="o">&lt;</span><span class="nx">TableRow</span><span class="o">&gt;</span>
  			<span class="o">&lt;</span><span class="nx">RawItem</span> <span class="nx">row</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span> <span class="nx">parentCallback</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">callbackFunc</span><span class="p">}</span><span class="sr">/</span><span class="err">&gt;
</span>  		<span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>  	<span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span>  <span class="p">)</span>
  <span class="p">})</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>RawItem에 callback 함수를 붙여준다.</p>
  </li>
  <li>이제 Raw Item을 클릭 → RawItem에서 클릭된 인덱스를 보낸다</li>
</ul>

<h3 id="클릭된-cell을-색칠하기">클릭된 Cell을 색칠하기</h3>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">const</span> <span class="nx">tableData</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
    <span class="k">return</span> <span class="nx">tableData</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
    	<span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
    		<span class="o">&lt;</span><span class="nx">TableRow</span> <span class="nx">bgcolor</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">selected</span> <span class="o">==</span> <span class="nx">index</span> <span class="p">?</span> <span class="p">{</span><span class="na">color</span> <span class="p">:</span> <span class="s2">`rgb(0, 40, 180)`</span><span class="p">}</span> <span class="p">:</span> <span class="kc">null</span><span class="p">}</span><span class="o">&gt;</span>
    			<span class="o">&lt;</span><span class="nx">RawItem</span> <span class="nx">row</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span> <span class="nx">parentCallback</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">callbackFunc</span><span class="p">}</span><span class="sr">/</span><span class="err">&gt;
</span>    		<span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>    	<span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span>    <span class="p">)</span>
    <span class="p">})</span>
</code></pre></div></div>
<ul>
  <li>이제 클릭 할 때마다, state에 저장된(자식이 준 index)와 cell의 index가 같을 때만 칠해준다.</li>
  <li>즉, 클릭 한 cell만 색이 칠해지는 것이다!</li>
</ul>

<hr />

<h3 id="전체-소스코드">전체 소스코드</h3>

<p>Translate.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
    <span class="k">import</span> <span class="p">{</span> <span class="nx">Paper</span><span class="p">,</span> <span class="nx">Table</span><span class="p">,</span> <span class="nx">TableRow</span><span class="p">,</span> <span class="nx">TableBody</span><span class="p">,</span> <span class="nx">withStyles</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@material-ui/core</span><span class="dl">'</span>
    <span class="k">import</span> <span class="nx">RawItem</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../components/RawItem</span><span class="dl">'</span>
    
    <span class="kd">class</span> <span class="nx">Translate</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>    
        <span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
            <span class="na">selected</span><span class="p">:</span> <span class="kc">null</span>
        <span class="p">}</span>
        
        <span class="nx">callbackFunc</span> <span class="o">=</span> <span class="p">(</span><span class="nx">childData</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span> 
                <span class="na">selected</span><span class="p">:</span> <span class="nx">childData</span><span class="p">,</span>
            <span class="p">})</span>
        <span class="p">}</span>
    
        <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="p">{</span><span class="nx">classes</span><span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span>
            <span class="kd">const</span> <span class="nx">tableData</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
            <span class="k">return</span> <span class="nx">tableData</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
                <span class="k">return</span> <span class="p">(</span>
                    <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
                        <span class="o">&lt;</span><span class="nx">Paper</span><span class="o">&gt;</span>
                            <span class="o">&lt;</span><span class="nx">Table</span><span class="o">&gt;</span>
                                <span class="o">&lt;</span><span class="nx">TableBody</span><span class="o">&gt;</span>
                                    <span class="o">&lt;</span><span class="nx">TableRow</span> <span class="nx">bgcolor</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">selected</span> <span class="o">==</span> <span class="nx">index</span> <span class="p">?</span> <span class="p">{</span><span class="na">color</span> <span class="p">:</span> <span class="s2">`rgb(0, 40, 180)`</span><span class="p">}</span> <span class="p">:</span> <span class="kc">null</span><span class="p">}</span><span class="o">&gt;</span>
                                    <span class="o">&lt;</span><span class="nx">RawItem</span> <span class="nx">parentCallback</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">callbackFunc</span><span class="p">}</span> <span class="nx">row</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span><span class="sr">/</span><span class="err">&gt;
</span>                                    <span class="o">&lt;</span><span class="sr">/TableRow</span><span class="err">&gt;
</span>    
                                <span class="o">&lt;</span><span class="sr">/TableBody</span><span class="err">&gt;
</span>                            <span class="o">&lt;</span><span class="sr">/Table</span><span class="err">&gt;
</span>                        <span class="o">&lt;</span><span class="sr">/Paper</span><span class="err">&gt;
</span>                    <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>                <span class="p">)</span>
            <span class="p">})</span>
        <span class="p">}</span>
    
    <span class="p">}</span>
    
    <span class="k">export</span> <span class="k">default</span> <span class="nx">withStyles</span><span class="p">(</span><span class="nx">styles</span><span class="p">)(</span><span class="nx">RawBlock</span><span class="p">)</span>
</code></pre></div></div>
<p>RawItem.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
    <span class="k">import</span> <span class="p">{</span> <span class="nx">Typography</span><span class="p">,</span> <span class="nx">TableCell</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@material-ui/core</span><span class="dl">'</span>
    <span class="k">import</span> <span class="p">{</span> <span class="nx">withStyles</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@material-ui/core/styles</span><span class="dl">'</span>
    
    <span class="kd">class</span> <span class="nx">RawItem</span> <span class="kd">extends</span> <span class="nx">Component</span> <span class="p">{</span>
    
        <span class="nx">sendSelectedRow</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">parentCallback</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">row</span><span class="p">)</span>
        <span class="p">}</span>
    
        <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="p">{</span> <span class="nx">classes</span> <span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span>
            <span class="kd">const</span> <span class="nx">sub</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span>
            <span class="k">return</span> <span class="p">(</span>
                <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
                    <span class="o">&lt;</span><span class="nx">TableCell</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">sendSelectedRow</span><span class="p">}</span><span class="o">&gt;</span>
                        <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
                            <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">row</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>                            <span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">caption</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>                            <span class="o">&lt;</span><span class="nx">Typography</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">'</span><span class="s1">h6</span><span class="dl">'</span><span class="o">&gt;&lt;</span><span class="sr">/Typography</span><span class="err">&gt;
</span>                        <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>                    <span class="o">&lt;</span><span class="sr">/TableCell</span><span class="err">&gt;
</span>    
                <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>            <span class="p">)</span>
    
    
        <span class="p">}</span>
    
    
    <span class="p">}</span>
    
    <span class="k">export</span> <span class="k">default</span> <span class="nx">withStyles</span><span class="p">(</span><span class="nx">styles</span><span class="p">)(</span><span class="nx">RawItem</span><span class="p">)</span>
</code></pre></div></div>
<ul>
  <li>리액트 재밌다</li>
  <li>더 좋은 방법 있으면 알려주세요 :)</li>
</ul>
:ET