I">8<h1 id="프로그래머스-방금-그곡">[프로그래머스] 방금 그곡</h1>

<p>Algorithm: 시뮬레이션
Created: Apr 30, 2020 7:27 PM
DoubleChk: No
link: https://programmers.co.kr/learn/courses/30/lessons/17683#</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;map&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;sstream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="k">struct</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">time</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">name</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">music</span><span class="p">;</span>
<span class="p">}</span> <span class="n">info</span><span class="p">;</span>
<span class="n">vector</span><span class="o">&lt;</span><span class="n">info</span><span class="o">&gt;</span> <span class="n">infos</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">getTime</span><span class="p">(</span><span class="n">string</span> <span class="n">start</span><span class="p">,</span> <span class="n">string</span> <span class="n">end</span><span class="p">)</span>
<span class="p">{</span>

    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">s</span><span class="p">,</span> <span class="n">e</span><span class="p">;</span>
    <span class="n">istringstream</span> <span class="n">is</span><span class="p">(</span><span class="n">start</span><span class="p">);</span>
    <span class="n">string</span> <span class="n">buffer</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">is</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="sc">':'</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">s</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">atoi</span><span class="p">(</span><span class="n">buffer</span><span class="p">.</span><span class="n">c_str</span><span class="p">()));</span>
    <span class="p">}</span>

    <span class="n">is</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
    <span class="n">is</span><span class="p">.</span><span class="n">str</span><span class="p">(</span><span class="n">end</span><span class="p">);</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">is</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="sc">':'</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">e</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">atoi</span><span class="p">(</span><span class="n">buffer</span><span class="p">.</span><span class="n">c_str</span><span class="p">()));</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">ret</span> <span class="o">+=</span> <span class="p">(</span><span class="n">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">-</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">string</span> <span class="nf">addAllNotes</span><span class="p">(</span><span class="kt">int</span> <span class="n">time</span><span class="p">,</span> <span class="n">string</span> <span class="n">str</span><span class="p">){</span>

    <span class="n">string</span> <span class="n">ret</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">time</span> <span class="o">&gt;</span> <span class="n">str</span><span class="p">.</span><span class="n">length</span><span class="p">())</span> <span class="n">time</span><span class="o">--</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">time</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">ret</span> <span class="o">+=</span> <span class="n">str</span><span class="p">[</span><span class="n">i</span> <span class="o">%</span> <span class="n">str</span><span class="p">.</span><span class="n">length</span><span class="p">()];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">string</span> <span class="nf">removeSharp</span><span class="p">(</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">size_t</span> <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">size_t</span> <span class="n">offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">((</span><span class="n">pos</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">"#"</span><span class="p">,</span> <span class="n">offset</span><span class="p">))</span> <span class="o">!=</span> <span class="n">string</span><span class="o">::</span><span class="n">npos</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
        <span class="kt">char</span> <span class="n">note</span> <span class="o">=</span> <span class="n">str</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">-</span> <span class="p">(</span><span class="sc">'A'</span> <span class="o">-</span> <span class="sc">'a'</span><span class="p">);</span>
        <span class="n">string</span> <span class="n">replace</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="n">replace</span> <span class="o">+=</span> <span class="n">note</span><span class="p">;</span>
        <span class="n">str</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">replace</span><span class="p">);</span>
        <span class="n">offset</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">str</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">m</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">musicinfos</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">m</span> <span class="o">=</span> <span class="n">removeSharp</span><span class="p">(</span><span class="n">m</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">string</span> <span class="n">music</span> <span class="o">:</span> <span class="n">musicinfos</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">istringstream</span> <span class="n">is</span><span class="p">(</span><span class="n">music</span><span class="p">);</span>
        <span class="n">string</span> <span class="n">buffer</span><span class="p">;</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">v</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">is</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="sc">','</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">v</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="kt">int</span> <span class="n">time</span> <span class="o">=</span> <span class="n">getTime</span><span class="p">(</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
        <span class="n">v</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">addAllNotes</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">removeSharp</span><span class="p">(</span><span class="n">v</span><span class="p">[</span><span class="mi">3</span><span class="p">]));</span>
        <span class="n">infos</span><span class="p">.</span><span class="n">push_back</span><span class="p">({</span><span class="n">time</span><span class="p">,</span> <span class="n">v</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">3</span><span class="p">]});</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">"(None)"</span><span class="p">;</span>
    <span class="n">string</span><span class="o">::</span><span class="n">size_type</span> <span class="n">n</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">info</span> <span class="n">cur</span> <span class="o">:</span> <span class="n">infos</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">cur</span><span class="p">.</span><span class="n">music</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">m</span><span class="p">);</span>
        <span class="k">if</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span><span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">cur</span><span class="p">.</span><span class="n">time</span><span class="p">){</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="n">cur</span><span class="p">.</span><span class="n">name</span><span class="p">;</span>
                <span class="n">cnt</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">time</span><span class="p">);</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>

    <span class="n">string</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">solution</span><span class="p">(</span><span class="s">"ABC"</span><span class="p">,</span> <span class="p">{</span><span class="s">"12:01,12:14,HELLO,C#DEFGAB"</span><span class="p">,</span> <span class="s">"13:00,13:05,WORLD,ABCDEF"</span><span class="p">});</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>c++ 문자열 다루기 진짜 귀찮다..</li>
  <li>#이 들어가 있는 모든 글자를 바꿔준다. (소문자로 바꿔줌)</li>
  <li>m을 musicinfos에 있다면 답을 업데이트 해 준다. 이 때, cur.time으로 재생 시간을 비교 해 더 오래 틀어진 것으로 업데이트 해 준다.</li>
  <li>27번 테스트 케이스가 계속 오류나서 getTime함수를 바꿔주니 됐다.</li>
</ul>
:ET