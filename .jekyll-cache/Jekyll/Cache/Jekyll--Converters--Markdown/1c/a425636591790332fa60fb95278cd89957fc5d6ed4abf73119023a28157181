I"F!<h1 id="3sum">3Sum</h1>

<p>Algorithm: 투포인터
Created: Nov 24, 2019 7:53 PM
DoubleChk: Yes
Type: LeetCode
level: 2
link: https://leetcode.com/problems/3sum/</p>

<p>Given an array <code class="language-plaintext highlighter-rouge">nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code class="language-plaintext highlighter-rouge">nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>

<p><strong>Note:</strong></p>

<p>The solution set must not contain duplicate triplets.</p>

<p><strong>Example:</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
</code></pre></div></div>

<hr />
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
    <span class="nl">public:</span>
       <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">threeSum</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">nums</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">vector</span> <span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">ans</span><span class="p">;</span>
            <span class="n">sort</span><span class="p">(</span><span class="n">nums</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">nums</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
            <span class="kt">int</span> <span class="n">numsLen</span> <span class="o">=</span> <span class="n">nums</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">numsLen</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">nums</span><span class="p">[</span><span class="n">numsLen</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
    
                <span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="n">numsLen</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">target</span> <span class="o">=</span> <span class="n">abs</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
    
                <span class="k">while</span><span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="n">e</span><span class="p">){</span>
                    
                    <span class="k">if</span><span class="p">(</span><span class="n">nums</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">e</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">target</span><span class="p">){</span>
                        <span class="n">s</span><span class="o">++</span><span class="p">;</span>
                    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">nums</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">e</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">target</span><span class="p">){</span>
                            <span class="n">e</span><span class="o">--</span><span class="p">;</span>
                    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                        <span class="k">while</span><span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="n">e</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">==</span> <span class="n">nums</span><span class="p">[</span><span class="n">s</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span> <span class="n">s</span><span class="o">++</span><span class="p">;</span>
                        <span class="k">while</span><span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="n">e</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="p">[</span><span class="n">e</span><span class="p">]</span> <span class="o">==</span> <span class="n">nums</span><span class="p">[</span><span class="n">e</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="n">e</span><span class="o">--</span><span class="p">;</span>
                        <span class="n">ans</span><span class="p">.</span><span class="n">push_back</span><span class="p">({</span><span class="n">x</span><span class="p">,</span> <span class="n">nums</span><span class="p">[</span><span class="n">s</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">e</span><span class="p">]});</span>
                        <span class="n">s</span><span class="o">++</span><span class="p">;</span>
                        <span class="n">e</span><span class="o">--</span><span class="p">;</span>
                    <span class="p">}</span>
    
                <span class="p">}</span>
            <span class="p">}</span>
    
            <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
            <span class="p">}</span>
    <span class="p">};</span>
</code></pre></div></div>
<ul>
  <li>
    <p>문제 풀이</p>

    <p>한 개를 x로 잡고, 나머지 두 숫자를 two pointer로 풀었다.</p>

    <p>투포인터는 정렬이 되어야 하므로 정렬을 한다.</p>

    <p>x가 0이상이라면 아무리 더해도 양수이기 때문에 break를 해준다.</p>

    <p>또 배열의 마지막 (제일 큰 값)이 음수여도 아무리 더해도 음수이기 때문에 break를 해준다.</p>

    <p>만약 똑같은 숫자가 연속으로 있다면 중복이기 때문에 continue를 해준다.</p>

    <p>그리고 투 포인터로 target 숫자를 찾아간다.</p>

    <p>하나의 조합을 찾았을 때, 같은 숫자가 연속으로 있는 경우라면 중복이기 때문에 똑같은 숫자가 아닐 때까지 index를 update 시켜준다.</p>
  </li>
  <li>
    <p>후기</p>

    <p>세상엔 참 천재들이 많다 ! 😲</p>
  </li>
</ul>
:ET